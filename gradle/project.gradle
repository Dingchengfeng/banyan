println "-- project: ${name} --"

println "spring boot version [${springBootVersion}]"
println "spring cloud verson [${springCloudVersion}]"
println "spring admin verson [${springBootAdminVersion}]"

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

group 'com.standard.banyan'
version '2.1.0-SNAPSHOT'

compileJava.options.encoding 'UTF-8'
compileTestJava.options.encoding 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring/'
    }
    mavenLocal()
    mavenCentral()
}

jar {
    manifest.attributes provider: 'gradle'
}

bootJar {
    enabled = false
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations.all {
//        transitive = false

    resolutionStrategy {
//        force "jakarta.servlet:jakarta.servlet-api:5.0.0"
    }

    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
//    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-log4j2'
}

//私服发布配置
//publishing {
//    publications {
//        maven(MavenPublication) {
//            // 指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
//            groupId = project.group
//            artifactId = project.name
//            version = project.version
//            // 如果是war包填写components.web，如果是jar包填写components.java
//            from components.java
//
//            // 配置上传源码
////            artifact sourceJar {
////                classifier "src"
////            }
//        }
//    }
//}